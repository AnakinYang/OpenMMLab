2023/06/03 23:43:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]
    CUDA available: True
    numpy_random_seed: 21
    GPU 0: NVIDIA RTX A5000
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.3, V11.3.109
    GCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0
    PyTorch: 1.10.0+cu113
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.1+cu113
    OpenCV: 4.7.0
    MMEngine: 0.7.2

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 21
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/06/03 23:43:36 - mmengine - INFO - Config:
default_scope = 'mmpose'
default_hooks = dict(
    timer=dict(type='IterTimerHook', _scope_='mmpose'),
    logger=dict(type='LoggerHook', interval=1, _scope_='mmpose'),
    param_scheduler=dict(type='ParamSchedulerHook', _scope_='mmpose'),
    checkpoint=dict(
        type='CheckpointHook',
        interval=10,
        _scope_='mmpose',
        save_best='PCK',
        rule='greater',
        max_keep_ckpts=2),
    sampler_seed=dict(type='DistSamplerSeedHook', _scope_='mmpose'),
    visualization=dict(
        type='PoseVisualizationHook', enable=False, _scope_='mmpose'))
custom_hooks = [
    dict(
        type='EMAHook',
        ema_type='ExpMomentumEMA',
        momentum=0.0002,
        update_buffers=True,
        priority=49),
    dict(
        type='mmdet.PipelineSwitchHook',
        switch_epoch=300,
        switch_pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='RandomFlip', direction='horizontal'),
            dict(type='RandomHalfBody'),
            dict(
                type='RandomBBoxTransform',
                shift_factor=0.0,
                scale_factor=[0.75, 1.25],
                rotate_factor=60),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                type='Albumentation',
                transforms=[
                    dict(type='Blur', p=0.1),
                    dict(type='MedianBlur', p=0.1),
                    dict(
                        type='CoarseDropout',
                        max_holes=1,
                        max_height=0.4,
                        max_width=0.4,
                        min_holes=1,
                        min_height=0.2,
                        min_width=0.2,
                        p=0.5)
                ]),
            dict(
                type='GenerateTarget',
                encoder=dict(
                    type='SimCCLabel',
                    input_size=(256, 256),
                    sigma=(12, 12),
                    simcc_split_ratio=2.0,
                    normalize=False,
                    use_dark=False)),
            dict(type='PackPoseInputs')
        ])
]
env_cfg = dict(
    cudnn_benchmark=False,
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0),
    dist_cfg=dict(backend='nccl'))
vis_backends = [dict(type='LocalVisBackend', _scope_='mmpose')]
visualizer = dict(
    type='PoseLocalVisualizer',
    vis_backends=[dict(type='LocalVisBackend')],
    name='visualizer',
    _scope_='mmpose')
log_processor = dict(
    type='LogProcessor',
    window_size=50,
    by_epoch=True,
    num_digits=6,
    _scope_='mmpose')
log_level = 'INFO'
load_from = None
resume = False
backend_args = dict(backend='local')
train_cfg = dict(by_epoch=True, max_epochs=300, val_interval=10)
val_cfg = dict()
test_cfg = dict()
dataset_type = 'CocoDataset'
data_mode = 'topdown'
data_root = 'data/Ear210_Keypoint_Dataset_coco/'
dataset_info = dict(
    dataset_name='Ear210_Keypoint_Dataset_coco',
    classes='ear',
    paper_info=dict(
        author='Tongji Zihao',
        title='Triangle Keypoints Detection',
        container='OpenMMLab',
        year='2023',
        homepage='https://space.bilibili.com/1900783'),
    keypoint_info=dict({
        0:
        dict(name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
        1:
        dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
        2:
        dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
        3:
        dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
        4:
        dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
        5:
        dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
        6:
        dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
        7:
        dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
        8:
        dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
        9:
        dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
        10:
        dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
        11:
        dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
        12:
        dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
        13:
        dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
        14:
        dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
        15:
        dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
        16:
        dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
        17:
        dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
        18:
        dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
        19:
        dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
        20:
        dict(name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
    }),
    skeleton_info=dict({
        0: dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
        1: dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
        2: dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
        3: dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
    }),
    joint_weights=[
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
        1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
    ],
    sigmas=[
        0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
        0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
        0.025
    ])
NUM_KEYPOINTS = 21
max_epochs = 300
val_interval = 10
train_batch_size = 32
val_batch_size = 8
stage2_num_epochs = 0
base_lr = 0.004
randomness = dict(seed=21)
optim_wrapper = dict(
    type='OptimWrapper',
    optimizer=dict(type='AdamW', lr=0.004, weight_decay=0.05),
    paramwise_cfg=dict(
        norm_decay_mult=0, bias_decay_mult=0, bypass_duplicate=True))
param_scheduler = [
    dict(type='LinearLR', start_factor=1e-05, by_epoch=False, begin=0, end=20),
    dict(
        type='CosineAnnealingLR',
        eta_min=0.0002,
        begin=150,
        end=300,
        T_max=150,
        by_epoch=True,
        convert_to_iter_based=True)
]
auto_scale_lr = dict(base_batch_size=1024)
codec = dict(
    type='SimCCLabel',
    input_size=(256, 256),
    sigma=(12, 12),
    simcc_split_ratio=2.0,
    normalize=False,
    use_dark=False)
model = dict(
    type='TopdownPoseEstimator',
    data_preprocessor=dict(
        type='PoseDataPreprocessor',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        bgr_to_rgb=True),
    backbone=dict(
        _scope_='mmdet',
        type='CSPNeXt',
        arch='P5',
        expand_ratio=0.5,
        deepen_factor=0.33,
        widen_factor=0.5,
        out_indices=(4, ),
        channel_attention=True,
        norm_cfg=dict(type='SyncBN'),
        act_cfg=dict(type='SiLU'),
        init_cfg=dict(
            type='Pretrained',
            prefix='backbone.',
            checkpoint=
            'https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth'
        )),
    head=dict(
        type='RTMCCHead',
        in_channels=512,
        out_channels=21,
        input_size=(256, 256),
        in_featuremap_size=(8, 8),
        simcc_split_ratio=2.0,
        final_layer_kernel_size=7,
        gau_cfg=dict(
            hidden_dims=256,
            s=128,
            expansion_factor=2,
            dropout_rate=0.0,
            drop_path=0.0,
            act_fn='SiLU',
            use_rel_bias=False,
            pos_enc=False),
        loss=dict(
            type='KLDiscretLoss',
            use_target_weight=True,
            beta=10.0,
            label_softmax=True),
        decoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    test_cfg=dict(flip_test=True))
train_pipeline = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='RandomFlip', direction='horizontal'),
    dict(
        type='RandomBBoxTransform', scale_factor=[0.8, 1.2], rotate_factor=30),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        type='Albumentation',
        transforms=[
            dict(type='ChannelShuffle', p=0.5),
            dict(type='CLAHE', p=0.5),
            dict(type='ColorJitter', p=0.5),
            dict(
                type='CoarseDropout',
                max_holes=4,
                max_height=0.3,
                max_width=0.3,
                min_holes=1,
                min_height=0.2,
                min_width=0.2,
                p=0.5)
        ]),
    dict(
        type='GenerateTarget',
        encoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    dict(type='PackPoseInputs')
]
val_pipeline = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='PackPoseInputs')
]
train_pipeline_stage2 = [
    dict(type='LoadImage', backend_args=dict(backend='local')),
    dict(type='GetBBoxCenterScale'),
    dict(type='RandomFlip', direction='horizontal'),
    dict(type='RandomHalfBody'),
    dict(
        type='RandomBBoxTransform',
        shift_factor=0.0,
        scale_factor=[0.75, 1.25],
        rotate_factor=60),
    dict(type='TopdownAffine', input_size=(256, 256)),
    dict(type='mmdet.YOLOXHSVRandomAug'),
    dict(
        type='Albumentation',
        transforms=[
            dict(type='Blur', p=0.1),
            dict(type='MedianBlur', p=0.1),
            dict(
                type='CoarseDropout',
                max_holes=1,
                max_height=0.4,
                max_width=0.4,
                min_holes=1,
                min_height=0.2,
                min_width=0.2,
                p=0.5)
        ]),
    dict(
        type='GenerateTarget',
        encoder=dict(
            type='SimCCLabel',
            input_size=(256, 256),
            sigma=(12, 12),
            simcc_split_ratio=2.0,
            normalize=False,
            use_dark=False)),
    dict(type='PackPoseInputs')
]
train_dataloader = dict(
    batch_size=32,
    num_workers=1,
    persistent_workers=True,
    sampler=dict(type='DefaultSampler', shuffle=True),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='train_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='RandomFlip', direction='horizontal'),
            dict(
                type='RandomBBoxTransform',
                scale_factor=[0.8, 1.2],
                rotate_factor=30),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='mmdet.YOLOXHSVRandomAug'),
            dict(
                type='Albumentation',
                transforms=[
                    dict(type='ChannelShuffle', p=0.5),
                    dict(type='CLAHE', p=0.5),
                    dict(type='ColorJitter', p=0.5),
                    dict(
                        type='CoarseDropout',
                        max_holes=4,
                        max_height=0.3,
                        max_width=0.3,
                        min_holes=1,
                        min_height=0.2,
                        min_width=0.2,
                        p=0.5)
                ]),
            dict(
                type='GenerateTarget',
                encoder=dict(
                    type='SimCCLabel',
                    input_size=(256, 256),
                    sigma=(12, 12),
                    simcc_split_ratio=2.0,
                    normalize=False,
                    use_dark=False)),
            dict(type='PackPoseInputs')
        ]))
val_dataloader = dict(
    batch_size=8,
    num_workers=1,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False, round_up=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='PackPoseInputs')
        ]))
test_dataloader = dict(
    batch_size=8,
    num_workers=1,
    persistent_workers=True,
    drop_last=False,
    sampler=dict(type='DefaultSampler', shuffle=False, round_up=False),
    dataset=dict(
        type='CocoDataset',
        data_root='data/Ear210_Keypoint_Dataset_coco/',
        metainfo=dict(
            dataset_name='Ear210_Keypoint_Dataset_coco',
            classes='ear',
            paper_info=dict(
                author='Tongji Zihao',
                title='Triangle Keypoints Detection',
                container='OpenMMLab',
                year='2023',
                homepage='https://space.bilibili.com/1900783'),
            keypoint_info=dict({
                0:
                dict(
                    name='肾上腺', id=0, color=[101, 205, 228], type='', swap=''),
                1:
                dict(name='耳尖', id=1, color=[240, 128, 128], type='', swap=''),
                2:
                dict(name='胃', id=2, color=[154, 205, 50], type='', swap=''),
                3:
                dict(name='眼', id=3, color=[34, 139, 34], type='', swap=''),
                4:
                dict(name='口', id=4, color=[139, 0, 0], type='', swap=''),
                5:
                dict(name='肝', id=5, color=[255, 165, 0], type='', swap=''),
                6:
                dict(name='对屏尖', id=6, color=[255, 0, 255], type='', swap=''),
                7:
                dict(name='心', id=7, color=[255, 255, 0], type='', swap=''),
                8:
                dict(name='肺', id=8, color=[29, 123, 243], type='', swap=''),
                9:
                dict(name='肺2', id=9, color=[0, 255, 255], type='', swap=''),
                10:
                dict(name='膀胱', id=10, color=[128, 0, 128], type='', swap=''),
                11:
                dict(name='脾', id=11, color=[74, 181, 57], type='', swap=''),
                12:
                dict(name='角窝中', id=12, color=[165, 42, 42], type='', swap=''),
                13:
                dict(name='神门', id=13, color=[128, 128, 0], type='', swap=''),
                14:
                dict(name='肾', id=14, color=[255, 0, 0], type='', swap=''),
                15:
                dict(name='耳门', id=15, color=[34, 139, 34], type='', swap=''),
                16:
                dict(name='听宫', id=16, color=[255, 129, 0], type='', swap=''),
                17:
                dict(name='听会', id=17, color=[70, 130, 180], type='', swap=''),
                18:
                dict(name='肩', id=18, color=[63, 103, 165], type='', swap=''),
                19:
                dict(name='扁桃体', id=19, color=[66, 77, 229], type='', swap=''),
                20:
                dict(
                    name='腰骶椎', id=20, color=[255, 105, 180], type='', swap='')
            }),
            skeleton_info=dict({
                0:
                dict(link=('眼', '扁桃体'), id=0, color=[100, 150, 200]),
                1:
                dict(link=('耳门', '听宫'), id=1, color=[200, 100, 150]),
                2:
                dict(link=('听宫', '听会'), id=2, color=[150, 120, 100]),
                3:
                dict(link=('耳门', '听会'), id=3, color=[66, 77, 229])
            }),
            joint_weights=[
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
                1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
            ],
            sigmas=[
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025,
                0.025, 0.025, 0.025
            ]),
        data_mode='topdown',
        ann_file='val_coco.json',
        data_prefix=dict(img='images/'),
        pipeline=[
            dict(type='LoadImage', backend_args=dict(backend='local')),
            dict(type='GetBBoxCenterScale'),
            dict(type='TopdownAffine', input_size=(256, 256)),
            dict(type='PackPoseInputs')
        ]))
val_evaluator = [
    dict(
        type='CocoMetric',
        ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(type='NME', norm_mode='keypoint_distance', keypoint_indices=[1, 2])
]
test_evaluator = [
    dict(
        type='CocoMetric',
        ann_file='data/Ear210_Keypoint_Dataset_coco/val_coco.json'),
    dict(type='PCKAccuracy'),
    dict(type='AUC'),
    dict(type='NME', norm_mode='keypoint_distance', keypoint_indices=[1, 2])
]
launcher = 'none'
work_dir = './work_dirs/rtmpose-s-ear'

2023/06/03 23:43:46 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/06/03 23:43:46 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_load_checkpoint:
(49          ) EMAHook                            
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) PipelineSwitchHook                 
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_save_checkpoint:
(49          ) EMAHook                            
 -------------------- 
after_train:
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test_epoch:
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) PoseVisualizationHook              
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(49          ) EMAHook                            
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.0.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stem.2.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.0.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.main_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.short_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.final_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage1.1.attention.fc.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.0.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.main_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.short_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.final_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage2.1.attention.fc.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.0.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.main_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.short_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.final_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage3.1.attention.fc.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.0.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.1.conv2.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.main_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.short_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.final_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv1.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- backbone.stage4.2.attention.fc.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - INFO - paramwise_options -- head.final_layer.bias:weight_decay=0.0
2023/06/03 23:43:52 - mmengine - WARNING - The prefix is not set in metric class PCKAccuracy.
2023/06/03 23:43:52 - mmengine - WARNING - The prefix is not set in metric class AUC.
2023/06/03 23:43:52 - mmengine - WARNING - The prefix is not set in metric class NME.
2023/06/03 23:43:58 - mmengine - INFO - load backbone. in model from: https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth
Name of parameter - Initialization information

backbone.stem.0.conv.weight - torch.Size([16, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.0.bn.weight - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.0.bn.bias - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.conv.weight - torch.Size([16, 16, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.bn.weight - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.1.bn.bias - torch.Size([16]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.conv.weight - torch.Size([32, 16, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stem.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.0.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.main_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.short_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.final_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([32, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([32, 32, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.attention.fc.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage1.1.attention.fc.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.main_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.short_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.final_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([64, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.attention.fc.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage2.1.attention.fc.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.main_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.short_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.final_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.conv.weight - torch.Size([128, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.depthwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.conv.weight - torch.Size([128, 128, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.blocks.1.conv2.pointwise_conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.attention.fc.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage3.1.attention.fc.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.1.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.main_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.short_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.final_conv.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.conv.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.conv.weight - torch.Size([256, 1, 5, 5]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.depthwise_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.blocks.0.conv2.pointwise_conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.attention.fc.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

backbone.stage4.2.attention.fc.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmdetection/v3.0/rtmdet/cspnext_rsb_pretrain/cspnext-s_imagenet_600e-ea671761.pth 

head.final_layer.weight - torch.Size([21, 512, 7, 7]): 
NormalInit: mean=0, std=0.001, bias=0 

head.final_layer.bias - torch.Size([21]): 
NormalInit: mean=0, std=0.001, bias=0 

head.mlp.0.g - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.mlp.1.weight - torch.Size([256, 64]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.gamma - torch.Size([2, 128]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.beta - torch.Size([2, 128]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.o.weight - torch.Size([256, 512]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.uv.weight - torch.Size([1152, 256]): 
NormalInit: mean=0, std=0.01, bias=0 

head.gau.ln.g - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.gau.res_scale.scale - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TopdownPoseEstimator  

head.cls_x.weight - torch.Size([512, 256]): 
NormalInit: mean=0, std=0.01, bias=0 

head.cls_y.weight - torch.Size([512, 256]): 
NormalInit: mean=0, std=0.01, bias=0 
2023/06/03 23:44:01 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/06/03 23:44:01 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/06/03 23:44:01 - mmengine - INFO - Checkpoints will be saved to /root/autodl-tmp/MMPose_Tutorials/2023/0524/mmpose/work_dirs/rtmpose-s-ear.
2023/06/03 23:44:13 - mmengine - INFO - Epoch(train)   [1][1/6]  lr: 4.000000e-08  eta: 5:57:31  time: 11.924111  data_time: 11.744673  memory: 1532  loss: 0.421681  loss_kpt: 0.421681  acc_pose: 0.008929
2023/06/03 23:44:23 - mmengine - INFO - Epoch(train)   [1][2/6]  lr: 2.105642e-04  eta: 5:27:39  time: 10.934304  data_time: 10.803681  memory: 1601  loss: 0.422090  loss_kpt: 0.422090  acc_pose: 0.004464
2023/06/03 23:44:33 - mmengine - INFO - Epoch(train)   [1][3/6]  lr: 4.210884e-04  eta: 5:24:41  time: 10.841105  data_time: 10.726691  memory: 1601  loss: 0.422149  loss_kpt: 0.422149  acc_pose: 0.014881
2023/06/03 23:44:44 - mmengine - INFO - Epoch(train)   [1][4/6]  lr: 6.316126e-04  eta: 5:21:36  time: 10.744039  data_time: 10.638265  memory: 1601  loss: 0.420874  loss_kpt: 0.420874  acc_pose: 0.037202
2023/06/03 23:44:54 - mmengine - INFO - Epoch(train)   [1][5/6]  lr: 8.421368e-04  eta: 5:20:08  time: 10.700896  data_time: 10.600413  memory: 1601  loss: 0.416509  loss_kpt: 0.416509  acc_pose: 0.139881
2023/06/03 23:44:57 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:44:57 - mmengine - INFO - Epoch(train)   [1][6/6]  lr: 1.052661e-03  eta: 4:37:33  time: 9.282790  data_time: 9.186846  memory: 568  loss: 0.364508  loss_kpt: 0.364508  acc_pose: 0.125000
2023/06/03 23:45:08 - mmengine - INFO - Epoch(train)   [2][1/6]  lr: 1.263185e-03  eta: 4:44:27  time: 9.518829  data_time: 9.425088  memory: 1601  loss: 0.360287  loss_kpt: 0.360287  acc_pose: 0.235119
2023/06/03 23:45:17 - mmengine - INFO - Epoch(train)   [2][2/6]  lr: 1.473709e-03  eta: 4:44:45  time: 9.534411  data_time: 9.442362  memory: 1601  loss: 0.354625  loss_kpt: 0.354625  acc_pose: 0.211310
2023/06/03 23:45:27 - mmengine - INFO - Epoch(train)   [2][3/6]  lr: 1.684234e-03  eta: 4:45:25  time: 9.561788  data_time: 9.470971  memory: 1601  loss: 0.350610  loss_kpt: 0.350610  acc_pose: 0.166859
2023/06/03 23:45:37 - mmengine - INFO - Epoch(train)   [2][4/6]  lr: 1.894758e-03  eta: 4:46:30  time: 9.603543  data_time: 9.514071  memory: 1601  loss: 0.347347  loss_kpt: 0.347347  acc_pose: 0.223214
2023/06/03 23:45:47 - mmengine - INFO - Epoch(train)   [2][5/6]  lr: 2.105282e-03  eta: 4:48:43  time: 9.683317  data_time: 9.594843  memory: 1601  loss: 0.343391  loss_kpt: 0.343391  acc_pose: 0.211790
2023/06/03 23:45:50 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:45:50 - mmengine - INFO - Epoch(train)   [2][6/6]  lr: 2.315806e-03  eta: 4:30:39  time: 9.082477  data_time: 8.996247  memory: 568  loss: 0.321089  loss_kpt: 0.321089  acc_pose: 0.238095
2023/06/03 23:46:01 - mmengine - INFO - Epoch(train)   [3][1/6]  lr: 2.526331e-03  eta: 4:34:32  time: 9.218025  data_time: 9.132313  memory: 1601  loss: 0.322518  loss_kpt: 0.322518  acc_pose: 0.178571
2023/06/03 23:46:12 - mmengine - INFO - Epoch(train)   [3][2/6]  lr: 2.736855e-03  eta: 4:37:42  time: 9.329265  data_time: 9.244079  memory: 1601  loss: 0.322589  loss_kpt: 0.322589  acc_pose: 0.178571
2023/06/03 23:46:22 - mmengine - INFO - Epoch(train)   [3][3/6]  lr: 2.947379e-03  eta: 4:38:56  time: 9.376106  data_time: 9.291271  memory: 1601  loss: 0.321241  loss_kpt: 0.321241  acc_pose: 0.229599
2023/06/03 23:46:32 - mmengine - INFO - Epoch(train)   [3][4/6]  lr: 3.157903e-03  eta: 4:41:04  time: 9.453147  data_time: 9.365823  memory: 1601  loss: 0.321715  loss_kpt: 0.321715  acc_pose: 0.165179
2023/06/03 23:46:43 - mmengine - INFO - Epoch(train)   [3][5/6]  lr: 3.368427e-03  eta: 4:42:48  time: 9.516866  data_time: 9.429912  memory: 1601  loss: 0.329793  loss_kpt: 0.329793  acc_pose: 0.089286
2023/06/03 23:46:45 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:46:45 - mmengine - INFO - Epoch(train)   [3][6/6]  lr: 3.578952e-03  eta: 4:31:22  time: 9.137422  data_time: 9.051882  memory: 568  loss: 0.317501  loss_kpt: 0.317501  acc_pose: 0.136905
2023/06/03 23:46:55 - mmengine - INFO - Epoch(train)   [4][1/6]  lr: 3.789476e-03  eta: 4:31:59  time: 9.163080  data_time: 9.077893  memory: 1601  loss: 0.321378  loss_kpt: 0.321378  acc_pose: 0.189276
2023/06/03 23:47:06 - mmengine - INFO - Epoch(train)   [4][2/6]  lr: 4.000000e-03  eta: 4:34:55  time: 9.267207  data_time: 9.182161  memory: 1601  loss: 0.334218  loss_kpt: 0.334218  acc_pose: 0.151786
2023/06/03 23:47:17 - mmengine - INFO - Epoch(train)   [4][3/6]  lr: 4.000000e-03  eta: 4:36:25  time: 9.322963  data_time: 9.238241  memory: 1601  loss: 0.344017  loss_kpt: 0.344017  acc_pose: 0.058036
2023/06/03 23:47:28 - mmengine - INFO - Epoch(train)   [4][4/6]  lr: 4.000000e-03  eta: 4:38:33  time: 9.400147  data_time: 9.314084  memory: 1601  loss: 0.349471  loss_kpt: 0.349471  acc_pose: 0.111847
2023/06/03 23:47:39 - mmengine - INFO - Epoch(train)   [4][5/6]  lr: 4.000000e-03  eta: 4:40:38  time: 9.475636  data_time: 9.390155  memory: 1601  loss: 0.350287  loss_kpt: 0.350287  acc_pose: 0.165179
2023/06/03 23:47:42 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:47:42 - mmengine - INFO - Epoch(train)   [4][6/6]  lr: 4.000000e-03  eta: 4:32:19  time: 9.199978  data_time: 9.115400  memory: 568  loss: 0.339313  loss_kpt: 0.339313  acc_pose: 0.107143
2023/06/03 23:47:51 - mmengine - INFO - Epoch(train)   [5][1/6]  lr: 4.000000e-03  eta: 4:32:48  time: 9.221443  data_time: 9.137041  memory: 1601  loss: 0.341055  loss_kpt: 0.341055  acc_pose: 0.129464
2023/06/03 23:48:02 - mmengine - INFO - Epoch(train)   [5][2/6]  lr: 4.000000e-03  eta: 4:34:35  time: 9.286990  data_time: 9.201506  memory: 1601  loss: 0.346585  loss_kpt: 0.346585  acc_pose: 0.107143
2023/06/03 23:48:13 - mmengine - INFO - Epoch(train)   [5][3/6]  lr: 4.000000e-03  eta: 4:35:55  time: 9.337508  data_time: 9.252250  memory: 1601  loss: 0.346474  loss_kpt: 0.346474  acc_pose: 0.225422
2023/06/03 23:48:23 - mmengine - INFO - Epoch(train)   [5][4/6]  lr: 4.000000e-03  eta: 4:36:11  time: 9.351979  data_time: 9.266922  memory: 1601  loss: 0.345537  loss_kpt: 0.345537  acc_pose: 0.229167
2023/06/03 23:48:33 - mmengine - INFO - Epoch(train)   [5][5/6]  lr: 4.000000e-03  eta: 4:37:15  time: 9.393415  data_time: 9.308658  memory: 1601  loss: 0.344646  loss_kpt: 0.344646  acc_pose: 0.266369
2023/06/03 23:48:36 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:48:36 - mmengine - INFO - Epoch(train)   [5][6/6]  lr: 4.000000e-03  eta: 4:30:52  time: 9.182027  data_time: 9.098071  memory: 568  loss: 0.336192  loss_kpt: 0.336192  acc_pose: 0.172619
2023/06/03 23:48:48 - mmengine - INFO - Epoch(train)   [6][1/6]  lr: 4.000000e-03  eta: 4:32:41  time: 9.248931  data_time: 9.165167  memory: 1601  loss: 0.337108  loss_kpt: 0.337108  acc_pose: 0.217262
2023/06/03 23:48:58 - mmengine - INFO - Epoch(train)   [6][2/6]  lr: 4.000000e-03  eta: 4:33:59  time: 9.298279  data_time: 9.214730  memory: 1601  loss: 0.337673  loss_kpt: 0.337673  acc_pose: 0.250000
2023/06/03 23:49:09 - mmengine - INFO - Epoch(train)   [6][3/6]  lr: 4.000000e-03  eta: 4:35:22  time: 9.350375  data_time: 9.266927  memory: 1601  loss: 0.336396  loss_kpt: 0.336396  acc_pose: 0.278754
2023/06/03 23:49:22 - mmengine - INFO - Epoch(train)   [6][4/6]  lr: 4.000000e-03  eta: 4:37:35  time: 9.431097  data_time: 9.347678  memory: 1601  loss: 0.335379  loss_kpt: 0.335379  acc_pose: 0.291667
2023/06/03 23:49:33 - mmengine - INFO - Epoch(train)   [6][5/6]  lr: 4.000000e-03  eta: 4:38:51  time: 9.479661  data_time: 9.394189  memory: 1601  loss: 0.334302  loss_kpt: 0.334302  acc_pose: 0.250000
2023/06/03 23:49:35 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:49:35 - mmengine - INFO - Epoch(train)   [6][6/6]  lr: 4.000000e-03  eta: 4:32:50  time: 9.280179  data_time: 9.195395  memory: 568  loss: 0.327131  loss_kpt: 0.327131  acc_pose: 0.160714
2023/06/03 23:49:45 - mmengine - INFO - Epoch(train)   [7][1/6]  lr: 4.000000e-03  eta: 4:33:13  time: 9.298430  data_time: 9.213837  memory: 1601  loss: 0.326189  loss_kpt: 0.326189  acc_pose: 0.236607
2023/06/03 23:49:56 - mmengine - INFO - Epoch(train)   [7][2/6]  lr: 4.000000e-03  eta: 4:34:07  time: 9.334845  data_time: 9.250058  memory: 1601  loss: 0.325060  loss_kpt: 0.325060  acc_pose: 0.264881
2023/06/03 23:50:06 - mmengine - INFO - Epoch(train)   [7][3/6]  lr: 4.000000e-03  eta: 4:35:01  time: 9.370299  data_time: 9.285475  memory: 1601  loss: 0.323856  loss_kpt: 0.323856  acc_pose: 0.275298
2023/06/03 23:50:18 - mmengine - INFO - Epoch(train)   [7][4/6]  lr: 4.000000e-03  eta: 4:36:53  time: 9.439654  data_time: 9.354363  memory: 1601  loss: 0.322211  loss_kpt: 0.322211  acc_pose: 0.289459
2023/06/03 23:50:29 - mmengine - INFO - Epoch(train)   [7][5/6]  lr: 4.000000e-03  eta: 4:37:18  time: 9.458956  data_time: 9.373777  memory: 1601  loss: 0.321260  loss_kpt: 0.321260  acc_pose: 0.249306
2023/06/03 23:50:31 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:50:31 - mmengine - INFO - Epoch(train)   [7][6/6]  lr: 4.000000e-03  eta: 4:32:10  time: 9.289195  data_time: 9.204585  memory: 568  loss: 0.315341  loss_kpt: 0.315341  acc_pose: 0.238095
2023/06/03 23:50:42 - mmengine - INFO - Epoch(train)   [8][1/6]  lr: 4.000000e-03  eta: 4:33:21  time: 9.335025  data_time: 9.249201  memory: 1601  loss: 0.314364  loss_kpt: 0.314364  acc_pose: 0.312932
2023/06/03 23:50:51 - mmengine - INFO - Epoch(train)   [8][2/6]  lr: 4.000000e-03  eta: 4:33:00  time: 9.328145  data_time: 9.242408  memory: 1601  loss: 0.313494  loss_kpt: 0.313494  acc_pose: 0.308036
2023/06/03 23:51:02 - mmengine - INFO - Epoch(train)   [8][3/6]  lr: 4.000000e-03  eta: 4:33:53  time: 9.363901  data_time: 9.278299  memory: 1601  loss: 0.312435  loss_kpt: 0.312435  acc_pose: 0.302083
2023/06/03 23:51:12 - mmengine - INFO - Epoch(train)   [8][4/6]  lr: 4.000000e-03  eta: 4:33:41  time: 9.362285  data_time: 9.276819  memory: 1601  loss: 0.311513  loss_kpt: 0.311513  acc_pose: 0.273810
2023/06/03 23:51:23 - mmengine - INFO - Epoch(train)   [8][5/6]  lr: 4.000000e-03  eta: 4:34:41  time: 9.402022  data_time: 9.316691  memory: 1601  loss: 0.310753  loss_kpt: 0.310753  acc_pose: 0.275298
2023/06/03 23:51:25 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:51:25 - mmengine - INFO - Epoch(train)   [8][6/6]  lr: 4.000000e-03  eta: 4:30:20  time: 9.258484  data_time: 9.173444  memory: 568  loss: 0.305778  loss_kpt: 0.305778  acc_pose: 0.184524
2023/06/03 23:51:37 - mmengine - INFO - Epoch(train)   [9][1/6]  lr: 4.000000e-03  eta: 4:31:31  time: 9.304134  data_time: 9.219157  memory: 1601  loss: 0.305045  loss_kpt: 0.305045  acc_pose: 0.278274
2023/06/03 23:51:48 - mmengine - INFO - Epoch(train)   [9][2/6]  lr: 4.000000e-03  eta: 4:32:39  time: 9.348531  data_time: 9.263780  memory: 1601  loss: 0.304307  loss_kpt: 0.304307  acc_pose: 0.264881
2023/06/03 23:51:59 - mmengine - INFO - Epoch(train)   [9][3/6]  lr: 4.000000e-03  eta: 4:33:04  time: 9.317089  data_time: 9.234433  memory: 1601  loss: 0.301060  loss_kpt: 0.301060  acc_pose: 0.305060
2023/06/03 23:52:10 - mmengine - INFO - Epoch(train)   [9][4/6]  lr: 4.000000e-03  eta: 4:34:07  time: 9.348194  data_time: 9.265196  memory: 1601  loss: 0.298014  loss_kpt: 0.298014  acc_pose: 0.299875
2023/06/03 23:52:20 - mmengine - INFO - Epoch(train)   [9][5/6]  lr: 4.000000e-03  eta: 4:34:00  time: 9.324943  data_time: 9.241893  memory: 1601  loss: 0.294673  loss_kpt: 0.294673  acc_pose: 0.333333
2023/06/03 23:52:23 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:52:23 - mmengine - INFO - Epoch(train)   [9][6/6]  lr: 4.000000e-03  eta: 4:30:31  time: 9.180448  data_time: 9.097682  memory: 568  loss: 0.287459  loss_kpt: 0.287459  acc_pose: 0.446429
2023/06/03 23:52:34 - mmengine - INFO - Epoch(train)  [10][1/6]  lr: 4.000000e-03  eta: 4:31:16  time: 9.190183  data_time: 9.107335  memory: 1601  loss: 0.284558  loss_kpt: 0.284558  acc_pose: 0.331845
2023/06/03 23:52:45 - mmengine - INFO - Epoch(train)  [10][2/6]  lr: 4.000000e-03  eta: 4:32:01  time: 9.367613  data_time: 9.284660  memory: 1601  loss: 0.287427  loss_kpt: 0.287427  acc_pose: 0.336310
2023/06/03 23:52:55 - mmengine - INFO - Epoch(train)  [10][3/6]  lr: 4.000000e-03  eta: 4:32:16  time: 9.352427  data_time: 9.269504  memory: 1601  loss: 0.285609  loss_kpt: 0.285609  acc_pose: 0.412202
2023/06/03 23:53:06 - mmengine - INFO - Epoch(train)  [10][4/6]  lr: 4.000000e-03  eta: 4:32:42  time: 9.370303  data_time: 9.287475  memory: 1601  loss: 0.284197  loss_kpt: 0.284197  acc_pose: 0.379464
2023/06/03 23:53:16 - mmengine - INFO - Epoch(train)  [10][5/6]  lr: 4.000000e-03  eta: 4:32:50  time: 9.374253  data_time: 9.291450  memory: 1601  loss: 0.282544  loss_kpt: 0.282544  acc_pose: 0.433900
2023/06/03 23:53:19 - mmengine - INFO - Exp name: rtmpose-s-ear_20230603_234328
2023/06/03 23:53:19 - mmengine - INFO - Epoch(train)  [10][6/6]  lr: 4.000000e-03  eta: 4:29:36  time: 9.235547  data_time: 9.153041  memory: 568  loss: 0.277393  loss_kpt: 0.277393  acc_pose: 0.386905
2023/06/03 23:53:19 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/06/03 23:53:30 - mmengine - INFO - Epoch(val)  [10][1/6]    eta: 0:00:12  time: 2.404053  data_time: 2.364341  memory: 181  
2023/06/03 23:53:32 - mmengine - INFO - Epoch(val)  [10][2/6]    eta: 0:00:08  time: 2.138929  data_time: 2.106110  memory: 181  
2023/06/03 23:53:33 - mmengine - INFO - Epoch(val)  [10][3/6]    eta: 0:00:05  time: 1.959933  data_time: 1.929600  memory: 181  
2023/06/03 23:53:35 - mmengine - INFO - Epoch(val)  [10][4/6]    eta: 0:00:03  time: 1.932411  data_time: 1.903245  memory: 181  
2023/06/03 23:53:37 - mmengine - INFO - Epoch(val)  [10][5/6]    eta: 0:00:01  time: 1.964217  data_time: 1.936402  memory: 181  
2023/06/03 23:53:38 - mmengine - INFO - Epoch(val)  [10][6/6]    eta: 0:00:00  time: 1.733280  data_time: 1.705640  memory: 130  
2023/06/03 23:53:38 - mmengine - INFO - Evaluating CocoMetric...
